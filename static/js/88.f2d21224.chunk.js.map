{"version":3,"file":"static/js/88.f2d21224.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selector.js","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactListItem_contact__gtH4X\",\"name\":\"ContactListItem_name__cIBvF\",\"number\":\"ContactListItem_number__j2Ar0\",\"btn\":\"ContactListItem_btn__Kdzd+\",\"editInput\":\"ContactListItem_editInput__PtM0l\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { aditContact } from '../../redux/operations';\nimport css from './ContactListItem.module.css';\n\nexport const ContactsListItem = ({\n  id,\n  name: nameValue,\n  number: numberValue,\n  handleDelete,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameValue);\n  const [number, setNumber] = useState(numberValue);\n\n  const dispatch = useDispatch();\n\n  const handleChangeMode = () => {\n    if (isEdit) {\n      setIsEdit(prev => !prev);\n      dispatch(aditContact({ id, name, number }));\n      return;\n    }\n    setIsEdit(prev => !prev);\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        return;\n      case 'number':\n        setNumber(e.target.value);\n        return;\n      default:\n        return;\n    }\n  };\n  return (\n    <li className={css.contact}>\n      {isEdit ? (\n        <input\n          className={css.editInput}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n        />\n      ) : (\n        <p className={css.name}>{name}:</p>\n      )}\n\n      {isEdit ? (\n        <input\n          className={css.editInput}\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n        />\n      ) : (\n        <p className={css.number}>{number}</p>\n      )}\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={() => {\n          handleDelete(id);\n        }}\n      >\n        Delete\n      </button>\n      <button className={css.btn} onClick={handleChangeMode}>\n        {isEdit ? 'Save' : 'Edit'}\n      </button>\n    </li>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selector';\nimport { deleteContact } from 'redux/operations';\nimport { ContactsListItem } from 'components/ContactListItem/ContactListItem';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selector';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      id: nanoid(6),\n      name: name,\n      number: number,\n    };\n    if (\n      allContacts.some(\n        item =>\n          item.name.toLowerCase() === contact.name.toLowerCase() ||\n          item.number === contact.number\n      )\n    ) {\n      alert(`Contact ${contact.name} already exist`);\n      return;\n    }\n    dispatch(addContacts(contact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <div>\n        <label className={css.labelForm}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={css.labelForm}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formBtn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ContactFilter_filter__k+LCa\",\"filterInput\":\"ContactFilter_filterInput__MrNtP\"};","import css from './ContactFilter.module.css';\nimport { setFilterValue } from 'redux/filterSlise';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selector';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  return (\n    <div>\n      <label className={css.filter}>\n        Find contacts by Name\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={e => {\n            dispatch(setFilterValue(e.target.value));\n          }}\n          placeholder=\" \"\n        />\n      </label>\n    </div>\n  );\n};\n","import { ContactsList } from '../components/ContactsList/ContactsList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { ContactFilter } from '../components/ContactFilter/ContactFilter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selector';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { Loader } from '../components/Loader/Loader';\n\nfunction Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n\n      <ContactForm />\n\n      <h2 style={{ marginBottom: 10 }}> Contacts</h2>\n\n      <ContactFilter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </div>\n  );\n}\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectIsLoading","state","contacts","isLoading","selectError","error","selectContacts","items","selectFilter","filter","selectFilteredContacts","filterValue","contact","toLowerCase","includes","ContactsListItem","id","nameValue","numberValue","number","handleDelete","useState","isEdit","setIsEdit","setName","setNumber","dispatch","useDispatch","handleChange","e","target","className","css","type","onChange","onClick","aditContact","ContactsList","useSelector","deleteContact","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","allContacts","currentTarget","onSubmit","preventDefault","some","item","alert","addContacts","pattern","title","required","ContactFilter","setFilterValue","placeholder","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","marginBottom","Loader"],"sourceRoot":""}